digraph "Ark::Compiler"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [label="Ark::Compiler",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="The ArkScript bytecode compiler."];
  Node2 -> Node1 [dir="back",color="darkorchid3",style="dashed",label=" m_parser" ];
  Node2 [label="Ark::internal::Parser",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d9/d0c/classArk_1_1internal_1_1Parser.html",tooltip="The parser is responsible of constructing the Abstract Syntax Tree from a token list."];
  Node3 -> Node2 [dir="back",color="darkorchid3",style="dashed",label=" m_libenv\nm_parent_include" ];
  Node3 [label="std::vector\< std::string \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",style="dashed",label=" elements" ];
  Node4 [label="std::string",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node5 [label="std::basic_string\<\l Char \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node3 [dir="back",color="orange",style="dashed",label=" \< std::string \>" ];
  Node6 [label="std::vector\< T \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node6 [dir="back",color="darkorchid3",style="dashed",label=" elements" ];
  Node7 [label="T",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node2 [dir="back",color="darkorchid3",style="dashed",label=" m_lexer" ];
  Node8 [label="Ark::internal::Lexer",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$dd/dc4/classArk_1_1internal_1_1Lexer.html",tooltip="The lexer, in charge of creating a list of tokens."];
  Node9 -> Node8 [dir="back",color="darkorchid3",style="dashed",label=" m_tokens" ];
  Node9 [label="std::vector\< Ark::internal\l::Token \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node9 [dir="back",color="darkorchid3",style="dashed",label=" elements" ];
  Node10 [label="Ark::internal::Token",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d0/d98/structArk_1_1internal_1_1Token.html",tooltip=" "];
  Node4 -> Node10 [dir="back",color="darkorchid3",style="dashed",label=" token" ];
  Node6 -> Node9 [dir="back",color="orange",style="dashed",label=" \< Ark::internal::Token \>" ];
  Node11 -> Node2 [dir="back",color="darkorchid3",style="dashed",label=" m_ast" ];
  Node11 [label="Ark::internal::Node",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$dc/d9e/classArk_1_1internal_1_1Node.html",tooltip="A node of an Abstract Syntax Tree for ArkScript."];
  Node12 -> Node11 [dir="back",color="darkorchid3",style="dashed",label=" m_list" ];
  Node12 [label="std::vector\< Ark::internal\l::Node \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node12 [dir="back",color="darkorchid3",style="dashed",label=" elements" ];
  Node6 -> Node12 [dir="back",color="orange",style="dashed",label=" \< Ark::internal::Node \>" ];
  Node4 -> Node11 [dir="back",color="darkorchid3",style="dashed",label=" m_filename" ];
  Node10 -> Node2 [dir="back",color="darkorchid3",style="dashed",label=" m_last_token" ];
  Node4 -> Node2 [dir="back",color="darkorchid3",style="dashed",label=" m_code\nm_file" ];
  Node13 -> Node1 [dir="back",color="darkorchid3",style="dashed",label=" m_optimizer" ];
  Node13 [label="Ark::internal::Optimizer",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d7/da8/classArk_1_1internal_1_1Optimizer.html",tooltip="The ArkScript AST optimizer."];
  Node11 -> Node13 [dir="back",color="darkorchid3",style="dashed",label=" m_ast" ];
  Node14 -> Node13 [dir="back",color="darkorchid3",style="dashed",label=" m_sym_appearances" ];
  Node14 [label="std::unordered_map\l\< std::string, unsigned \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node14 [dir="back",color="darkorchid3",style="dashed",label=" keys" ];
  Node15 -> Node14 [dir="back",color="orange",style="dashed",label=" \< std::string, unsigned \>" ];
  Node15 [label="std::unordered_map\l\< K, T \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node16 -> Node15 [dir="back",color="darkorchid3",style="dashed",label=" keys" ];
  Node16 [label="K",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node15 [dir="back",color="darkorchid3",style="dashed",label=" elements" ];
  Node12 -> Node1 [dir="back",color="darkorchid3",style="dashed",label=" m_symbols" ];
  Node3 -> Node1 [dir="back",color="darkorchid3",style="dashed",label=" m_defined_symbols\nm_plugins" ];
  Node17 -> Node1 [dir="back",color="darkorchid3",style="dashed",label=" m_values" ];
  Node17 [label="std::vector\< Ark::internal\l::ValTableElem \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node18 -> Node17 [dir="back",color="darkorchid3",style="dashed",label=" elements" ];
  Node18 [label="Ark::internal::ValTableElem",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d8/dc4/structArk_1_1internal_1_1ValTableElem.html",tooltip="A Compiler Value class helper to handle multiple types."];
  Node6 -> Node17 [dir="back",color="orange",style="dashed",label=" \< Ark::internal::ValTable\lElem \>" ];
  Node19 -> Node1 [dir="back",color="darkorchid3",style="dashed",label=" m_code_pages\nm_temp_pages" ];
  Node19 [label="std::vector\< std::vector\l\< uint8_t \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node20 -> Node19 [dir="back",color="darkorchid3",style="dashed",label=" elements" ];
  Node20 [label="std::vector\< uint8_t \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node20 [dir="back",color="orange",style="dashed",label=" \< uint8_t \>" ];
  Node6 -> Node19 [dir="back",color="orange",style="dashed",label=" \< std::vector\< uint8\l_t \> \>" ];
  Node20 -> Node1 [dir="back",color="darkorchid3",style="dashed",label=" m_bytecode" ];
}
